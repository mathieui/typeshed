from _curses import *  # noqa: F403
from _curses import _CursesWindow as _CursesWindow
from typing import Any, Callable, TypeVar

_T = TypeVar("_T")

# available after calling `curses.initscr()`
LINES: int
COLS: int

A_ALTCHARSET: int
A_BLINK: int
A_BOLD: int
A_DIM: int
A_INVIS: int
A_ITALIC: int
A_NORMAL: int
A_PROTECT: int
A_REVERSE: int
A_STANDOUT: int
A_UNDERLINE: int
A_HORIZONTAL: int
A_LEFT: int
A_LOW: int
A_RIGHT: int
A_TOP: int
A_VERTICAL: int
A_CHARTEXT: int
A_ATTRIBUTES: int
A_CHARTEXT: int
A_COLOR: int
KEY_MIN: int
KEY_BREAK: int
KEY_DOWN: int
KEY_UP: int
KEY_LEFT: int
KEY_RIGHT: int
KEY_HOME: int
KEY_BACKSPACE: int
KEY_F0: int
KEY_Fn: int
KEY_DL: int
KEY_IL: int
KEY_DC: int
KEY_IC: int
KEY_EIC: int
KEY_CLEAR: int
KEY_EOS: int
KEY_EOL: int
KEY_SF: int
KEY_SR: int
KEY_NPAGE: int
KEY_PPAGE: int
KEY_STAB: int
KEY_CTAB: int
KEY_CATAB: int
KEY_ENTER: int
KEY_SRESET: int
KEY_RESET: int
KEY_PRINT: int
KEY_LL: int
KEY_A1: int
KEY_A3: int
KEY_B2: int
KEY_C1: int
KEY_C3: int
KEY_BTAB: int
KEY_BEG: int
KEY_CANCEL: int
KEY_CLOSE: int
KEY_COMMAND: int
KEY_COPY: int
KEY_CREATE: int
KEY_END: int
KEY_EXIT: int
KEY_FIND: int
KEY_HELP: int
KEY_MARK: int
KEY_MESSAGE: int
KEY_MOVE: int
KEY_NEXT: int
KEY_OPEN: int
KEY_OPTIONS: int
KEY_PREVIOUS: int
KEY_REDO: int
KEY_REFERENCE: int
KEY_REFRESH: int
KEY_REPLACE: int
KEY_RESTART: int
KEY_RESUME: int
KEY_SAVE: int
KEY_SBEG: int
KEY_SCANCEL: int
KEY_SCOMMAND: int
KEY_SCOPY: int
KEY_SCREATE: int
KEY_SDC: int
KEY_SDL: int
KEY_SELECT: int
KEY_SEND: int
KEY_SEOL: int
KEY_SEXIT: int
KEY_SFIND: int
KEY_SHELP: int
KEY_SHOME: int
KEY_SIC: int
KEY_SLEFT: int
KEY_SMESSAGE: int
KEY_SMOVE: int
KEY_SNEXT: int
KEY_SOPTIONS: int
KEY_SPREVIOUS: int
KEY_SPRINT: int
KEY_SREDO: int
KEY_SREPLACE: int
KEY_SRIGHT: int
KEY_SRSUME: int
KEY_SSAVE: int
KEY_SSUSPEND: int
KEY_SUNDO: int
KEY_SUSPEND: int
KEY_UNDO: int
KEY_MOUSE: int
KEY_RESIZE: int
KEY_MAX: int
ACS_BBSS: int
ACS_BLOCK: int
ACS_BOARD: int
ACS_BSBS: int
ACS_BSSB: int
ACS_BSSS: int
ACS_BTEE: int
ACS_BULLET: int
ACS_CKBOARD: int
ACS_DARROW: int
ACS_DEGREE: int
ACS_DIAMOND: int
ACS_GEQUAL: int
ACS_HLINE: int
ACS_LANTERN: int
ACS_LARROW: int
ACS_LEQUAL: int
ACS_LLCORNER: int
ACS_LRCORNER: int
ACS_LTEE: int
ACS_NEQUAL: int
ACS_PI: int
ACS_PLMINUS: int
ACS_PLUS: int
ACS_RARROW: int
ACS_RTEE: int
ACS_S1: int
ACS_S3: int
ACS_S7: int
ACS_S9: int
ACS_SBBS: int
ACS_SBSB: int
ACS_SBSS: int
ACS_SSBB: int
ACS_SSBS: int
ACS_SSSB: int
ACS_SSSS: int
ACS_STERLING: int
ACS_TTEE: int
ACS_UARROW: int
ACS_ULCORNER: int
ACS_URCORNER: int
ACS_VLINE: int
COLOR_BLACK: int
COLOR_BLUE: int
COLOR_CYAN: int
COLOR_GREEN: int
COLOR_MAGENTA: int
COLOR_RED: int
COLOR_WHITE: int
COLOR_YELLOW: int

# available after calling `curses.start_color()`
COLORS: int
COLOR_PAIRS: int

def wrapper(__func: Callable[..., _T], *arg: Any, **kwds: Any) -> _T: ...
